{"version":3,"sources":["components/Header.js","components/Todo.js","components/TodoList.js","components/Footer.js","App.js","index.js"],"names":["Header","state","newTodo","handleChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","handleSubmit","key","props","onSubmit","this","react_default","a","createElement","className","placeholder","onChange","onKeyUp","React","Component","Todo","_ref","id","complete","text","onChangeStatus","onDestroyTodo","undefined","type","concat","checked","htmlFor","onClick","TodoList","filtredTodos","toggleAll","onChangeAllStatus","style","display","map","todo","components_Todo","assign","defaultProps","Footer","activ","filter","completed","onFilter","onClear","href","App","todos","currentDate","Date","prevState","toConsumableArray","getTime","changeStatus","newTodos","_this$state","newActiv","newCompleted","newToggleAll","index","findIndex","splice","changeAllStatus","objectSpread","length","handleDestroy","clearCompleted","handleFilter","_this$state2","all","components_Header","Fragment","components_TodoList","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9738bbf1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    newTodo: '',\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    if (event.key === 'Enter') {\n      this.props.onSubmit(this.state.newTodo);\n\n      this.setState({\n        newTodo: '',\n      });\n    }\n  }\n\n  render() {\n    const { newTodo } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          name=\"newTodo\"\n          value={newTodo}\n          onChange={this.handleChange}\n          onKeyUp={this.handleSubmit}\n        />\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","/* eslint-disable jsx-a11y/label-has-for */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({\n  id, complete, text, onChangeStatus, onDestroyTodo,\n}) => (\n  <li\n    className={\n      complete === 'completed' ? 'completed' : undefined\n    }\n  >\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={`todo-${id}`}\n        checked={complete === 'completed'}\n        onChange={() => onChangeStatus(id)}\n      />\n      <label htmlFor={`todo-${id}`}>{text}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => onDestroyTodo(id)}\n      />\n    </div>\n  </li>\n);\n\nTodo.propTypes = {\n  id: PropTypes.number.isRequired,\n  complete: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  onChangeStatus: PropTypes.func.isRequired,\n  onDestroyTodo: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({\n  filtredTodos, toggleAll, onChangeStatus, onDestroyTodo, onChangeAllStatus,\n}) => (\n  <section className=\"main\" style={{ display: 'block' }}>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={toggleAll}\n      onChange={onChangeAllStatus}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {\n        filtredTodos.map(todo => (\n          <Todo\n            {...todo}\n            onChangeStatus={onChangeStatus}\n            onDestroyTodo={onDestroyTodo}\n            key={todo.id}\n          />\n        ))\n      }\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  filtredTodos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    complete: PropTypes.string,\n    text: PropTypes.string,\n  })).isRequired,\n  toggleAll: PropTypes.bool,\n  onChangeStatus: PropTypes.func.isRequired,\n  onDestroyTodo: PropTypes.func.isRequired,\n  onChangeAllStatus: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  toggleAll: false,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({\n  activ, filter, completed, onFilter, onClear,\n}) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {`${activ} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={filter === 'all' ? 'selected' : undefined}\n          onClick={() => onFilter('all')}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={filter === 'activ' ? 'selected' : undefined}\n          onClick={() => onFilter('activ')}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={filter === 'completed' ? 'selected' : undefined}\n          onClick={() => onFilter('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      style={{ display: 'block' }}\n      onClick={onClear}\n    >\n      {completed > 0 && 'Clear completed'}\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  activ: PropTypes.number,\n  filter: PropTypes.string,\n  completed: PropTypes.number,\n  onFilter: PropTypes.func.isRequired,\n  onClear: PropTypes.func.isRequired,\n};\n\nFooter.defaultProps = {\n  activ: '',\n  completed: 0,\n  filter: 'all',\n};\n\nexport default Footer;\n","/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    activ: 0,\n    completed: 0,\n    filter: 'all',\n    toggleAll: false,\n  }\n\n  handleSubmit = (newTodo) => {\n    const currentDate = new Date();\n\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        {\n          id: currentDate.getTime(),\n          text: newTodo,\n          complete: 'activ',\n        },\n      ],\n      activ: prevState.activ + 1,\n    }));\n  }\n\n  changeStatus = (id) => {\n    const newTodos = [...this.state.todos];\n    const { activ, toggleAll } = this.state;\n    let newActiv = 0;\n    let newCompleted = 0;\n    let newToggleAll = false;\n    const index = newTodos.findIndex(todo => todo.id === id);\n    const todo = newTodos[index];\n\n    if (todo.complete === 'activ') {\n      todo.complete = 'completed';\n      newActiv = -1;\n      newCompleted = 1;\n    } else {\n      todo.complete = 'activ';\n      newActiv = 1;\n      newCompleted = -1;\n    }\n\n    newTodos.splice(index, 1, todo);\n\n    if (activ + newActiv === 0 && toggleAll === false) {\n      newToggleAll = true;\n    }\n\n    this.setState(prevState => ({\n      todos: [...newTodos],\n      activ: prevState.activ + newActiv,\n      completed: prevState.completed + newCompleted,\n      toggleAll: newToggleAll,\n    }));\n  }\n\n  changeAllStatus = () => {\n    let newTodos = [...this.state.todos];\n    let newActiv = 0;\n    let newCompleted = 0;\n\n    if (!this.state.toggleAll) {\n      newTodos = newTodos.map(todo => ({\n        ...todo,\n        complete: 'completed',\n      }));\n      newActiv = 0;\n      newCompleted = newTodos.length;\n    } else {\n      newTodos = newTodos.map(todo => ({\n        ...todo,\n        complete: 'activ',\n      }));\n      newActiv = newTodos.length;\n      newCompleted = 0;\n    }\n\n    this.setState(prevState => ({\n      todos: [...newTodos],\n      activ: newActiv,\n      completed: newCompleted,\n      toggleAll: !prevState.toggleAll,\n    }));\n  }\n\n  handleDestroy = (id) => {\n    const newTodos = [...this.state.todos];\n    const index = newTodos.findIndex(todo => todo.id === id);\n    let newActiv = 0;\n    let newCompleted = 0;\n\n    if (newTodos[index].complete === 'activ') {\n      newActiv = -1;\n    } else {\n      newCompleted = -1;\n    }\n\n    newTodos.splice(index, 1);\n\n    this.setState(prevState => ({\n      todos: [...newTodos],\n      activ: prevState.activ + newActiv,\n      completed: prevState.completed + newCompleted,\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.complete === 'activ'),\n      completed: 0,\n    }));\n  }\n\n  handleFilter = (filter) => {\n    this.setState({\n      filter,\n    });\n  }\n\n  render() {\n    const {\n      todos, activ, completed, filter, toggleAll,\n    } = this.state;\n    const filtredTodos = {\n      activ: todos.filter(todo => todo.complete === 'activ'),\n      completed: todos.filter(todo => todo.complete === 'completed'),\n      all: todos,\n    };\n\n    return (\n      <section className=\"todoapp\">\n        <Header onSubmit={this.handleSubmit} />\n\n        {(todos.length !== 0)\n          ? (\n            <>\n              <TodoList\n                filtredTodos={filtredTodos[filter]}\n                onChangeStatus={this.changeStatus}\n                onDestroyTodo={this.handleDestroy}\n                toggleAll={toggleAll}\n                onChangeAllStatus={this.changeAllStatus}\n              />\n\n              <Footer\n                activ={activ}\n                completed={completed}\n                onFilter={this.handleFilter}\n                onClear={this.clearCompleted}\n              />\n            </>\n          )\n          : ''\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}